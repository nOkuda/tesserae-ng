<?xml version="1.0" encoding="UTF-8" ?>
<schema name="latin" version="1.5">
 <fields>
   <field name="id" type="string" indexed="true" stored="true" required="true" multiValued="false" />
   <field name="volume_id" type="int" indexed="true" stored="true" multiValued="false"/>
   <field name="source_id" type="int" indexed="true" stored="true" multiValued="false"/>
   <field name="django_ct" type="string" indexed="true" stored="true" multiValued="false"/>
   <field name="django_id" type="string" indexed="true" stored="true" multiValued="false"/>
   <field name="author" type="text_general" indexed="true" stored="true" multiValued="false"/>
   <field name="title" type="text_general" indexed="true" stored="true" />
   <field name="volume" type="text_general" indexed="true" stored="true" />
   <field name="online_source_name" type="text_general" indexed="true" stored="true"/>
   <field name="online_source_url" type="text_general" indexed="true" stored="true"/>
   <field name="print_source_name" type="text_general" indexed="true" stored="true"/>
   <field name="print_source_url" type="text_general" indexed="true" stored="true"/>
   <field name="text" type="text_latin" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
   <field name="parse_type" type="string" indexed="true" stored="true" multiValued="false"/>
   <field name="enabled" type="boolean" indexed="true" stored="true"/>
   <field name="_version_" type="long" indexed="true" stored="true" multiValued="false" />
 </fields>

 <uniqueKey>id</uniqueKey>

 <defaultSearchField>text</defaultSearchField>

 <solrQueryParser defaultOperator="AND"/>

 <types>
   <fieldType name="string" class="solr.StrField" sortMissingLast="true" />
   <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>
   <fieldtype name="binary" class="solr.BinaryField"/>

   <!-- Numeric field types that manipulate the value into
        a string value that isn't human-readable in its internal form,
        but with a lexicographic ordering the same as the numeric ordering,
        so that range queries work correctly. -->
   <fieldType name="int" class="solr.TrieIntField" precisionStep="0" omitNorms="true" sortMissingLast="true" positionIncrementGap="0"/>
   <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" omitNorms="true" sortMissingLast="true" positionIncrementGap="0"/>
   <fieldType name="long" class="solr.TrieLongField" precisionStep="0" omitNorms="true" sortMissingLast="true" positionIncrementGap="0"/>
   <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" omitNorms="true" sortMissingLast="true" positionIncrementGap="0"/>

   <fieldType name="tint" class="solr.TrieIntField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
   <fieldType name="tfloat" class="solr.TrieFloatField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
   <fieldType name="tlong" class="solr.TrieLongField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
   <fieldType name="tdouble" class="solr.TrieDoubleField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>

   <fieldType name="date" class="solr.TrieDateField" omitNorms="true" precisionStep="0" positionIncrementGap="0"/>
   <!-- A Trie based date field for faster date range queries and date faceting. -->
   <fieldType name="tdate" class="solr.TrieDateField" omitNorms="true" precisionStep="6" positionIncrementGap="0"/>

   <fieldType name="point" class="solr.PointType" dimension="2" subFieldSuffix="_d"/>
   <fieldType name="location" class="solr.LatLonType" subFieldSuffix="_coordinate"/>
   <fieldtype name="geohash" class="solr.GeoHashField"/>

   <fieldType name="text_general" class="solr.TextField" positionIncrementGap="100">
     <analyzer type="index">
       <tokenizer class="solr.StandardTokenizerFactory"/>
       <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
       <!-- in this example, we will only use synonyms at query time
            <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
       -->
       <filter class="solr.LowerCaseFilterFactory"/>
     </analyzer>
     <analyzer type="query">
       <tokenizer class="solr.StandardTokenizerFactory"/>
       <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
       <!--<filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>-->
       <filter class="solr.LowerCaseFilterFactory"/>
     </analyzer>
   </fieldType>

   <fieldType name="text_latin" class="solr.TextField" positionIncrementGap="100">
     <analyzer type="index">
       <tokenizer class="solr.StandardTokenizerFactory"/>
       <filter class="solr.LowerCaseFilterFactory"/>
       <filter class="org.apache.lucene.analysis.la.ReplaceCharacterFilterFactory" searchCharacters="vj" replacementCharacters="ui" />
       <filter class="org.apache.lucene.analysis.la.ReplaceRegexFilterFactory" regex="[0-9]" replacement="" />
       <filter class="org.apache.solr.analysis.lexicon.LatinLexiconStemFilterFactory" database="/opt/data/lexicon/la.lexicon.db" multiStem="true" />
       <filter class="org.apache.solr.analysis.corpus.LatinCorpusFrequencyCollectorFactory" database="/opt/data/latin.corpus.db" />
     </analyzer>
     <analyzer type="query">
       <!-- NOTE: This isn't used for the /compare handler, and I really haven't bothered to configure this -->
       <tokenizer class="solr.StandardTokenizerFactory"/>
       <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
       <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
       <filter class="solr.LowerCaseFilterFactory"/>
       <filter class="org.apache.solr.analysis.LatinNumberConvertFilterFactory" strictMode="true"/> 
       <filter class="org.apache.solr.analysis.lexicon.LatinLexiconStemFilterFactory" database="/opt/data/lexicon/la.lexicon.db" />
     </analyzer>
   </fieldType>

   <fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100">
     <analyzer>
       <tokenizer class="solr.WhitespaceTokenizerFactory"/>
     </analyzer>
   </fieldType>

   <fieldType name="ngram" class="solr.TextField" >
     <analyzer type="index">
       <tokenizer class="solr.KeywordTokenizerFactory"/>
       <filter class="solr.LowerCaseFilterFactory"/>
       <filter class="solr.NGramFilterFactory" minGramSize="3" maxGramSize="15" />
     </analyzer>
     <analyzer type="query">
       <tokenizer class="solr.KeywordTokenizerFactory"/>
       <filter class="solr.LowerCaseFilterFactory"/>
     </analyzer>
   </fieldType>

   <fieldType name="edge_ngram" class="solr.TextField" positionIncrementGap="1">
     <analyzer type="index">
       <tokenizer class="solr.WhitespaceTokenizerFactory" />
       <filter class="solr.LowerCaseFilterFactory" />
       <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
       <filter class="solr.EdgeNGramFilterFactory" minGramSize="1" maxGramSize="15" side="front" />
     </analyzer>
     <analyzer type="query">
       <tokenizer class="solr.WhitespaceTokenizerFactory" />
       <filter class="solr.LowerCaseFilterFactory" />
       <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
     </analyzer>
   </fieldType>

 </types>

 <!-- Similarity is the scoring routine for each document vs. a query.
      A custom Similarity or SimilarityFactory may be specified here, but 
      the default is fine for most applications.  
      For more info: http://wiki.apache.org/solr/SchemaXml#Similarity
 -->
 <!--
     <similarity class="com.example.solr.CustomSimilarityFactory">
       <str name="paramkey">param value</str>
     </similarity>
 -->
</schema>
